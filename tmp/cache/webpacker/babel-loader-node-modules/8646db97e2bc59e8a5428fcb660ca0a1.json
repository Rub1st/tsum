{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { INDEX_DISH, SET_SEARCH_NAME, SET_SEARCH_CODE } from '../constants/dishes';\nvar initialState = {\n  dishes: [],\n  searchCode: '',\n  searchName: ''\n};\n\nvar DishReducer = function DishReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INDEX_DISH:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          dishes: action.value\n        });\n      }\n\n    case SET_SEARCH_CODE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          searchCode: action.value\n        });\n      }\n\n    case SET_SEARCH_NAME:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          searchName: action.value\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default DishReducer;","map":{"version":3,"sources":["/home/akira/Desktop/tsum/app/javascript/main_redux/reducers/dishes.js"],"names":["INDEX_DISH","SET_SEARCH_NAME","SET_SEARCH_CODE","initialState","dishes","searchCode","searchName","DishReducer","state","action","type","value"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,eAAtC,QAA6D,qBAA7D;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,UAAL;AAAiB;AACf,+CAAWQ,KAAX;AAAkBJ,UAAAA,MAAM,EAAEK,MAAM,CAACE;AAAjC;AACD;;AACD,SAAKT,eAAL;AAAsB;AACpB,+CAAWM,KAAX;AAAkBH,UAAAA,UAAU,EAAEI,MAAM,CAACE;AAArC;AACD;;AACD,SAAKV,eAAL;AAAsB;AACpB,+CAAWO,KAAX;AAAkBF,UAAAA,UAAU,EAAEG,MAAM,CAACE;AAArC;AACD;;AACD;AAAQ;AACN,eAAOH,KAAP;AACD;AAZH;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import { INDEX_DISH, SET_SEARCH_NAME, SET_SEARCH_CODE } from '../constants/dishes'\n\nconst initialState = {\n  dishes: [],\n  searchCode: '',\n  searchName: '',\n}\n\nconst DishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INDEX_DISH: {\n      return {...state, dishes: action.value}\n    }\n    case SET_SEARCH_CODE: {\n      return {...state, searchCode: action.value}\n    }\n    case SET_SEARCH_NAME: {\n      return {...state, searchName: action.value}\n    }\n    default:{\n      return state;\n    }\n  }\n}\n\nexport default DishReducer"]},"metadata":{},"sourceType":"module"}